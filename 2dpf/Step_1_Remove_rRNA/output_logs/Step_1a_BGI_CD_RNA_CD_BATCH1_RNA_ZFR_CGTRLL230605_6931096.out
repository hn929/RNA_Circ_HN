                                
                                
Job started at: 2023-11-27 13:00:18
                                
Indexing a reference genome using bowtie2
Settings:
  Output files: "/mnt/vast/hpc/csg/hn2435/RNA_Circ/index/danio_rerio_index.*.bt2"
  Line rate: 6 (line is 64 bytes)
  Lines per side: 1 (side is 64 bytes)
  Offset rate: 4 (one in 16)
  FTable chars: 10
  Strings: unpacked
  Max bucket size: default
  Max bucket size, sqrt multiplier: default
  Max bucket size, len divisor: 4
  Difference-cover sample period: 1024
  Endianness: little
  Actual local endianness: little
  Sanity checking: disabled
  Assertions: disabled
  Random seed: 0
  Sizeofs: void*:8, int:4, long:8, size_t:8
Input files DNA, FASTA:
  /mnt/vast/hpc/csg/hn2435/RNA_Circ/references/Danio_rerio.GRCz11.dna_sm.primary_assembly.fa
Building a SMALL index
Reading reference sizes
  Time reading reference sizes: 00:07:49
Calculating joined length
Writing header
Reserving space for joined string
Joining reference sequences
  Time to join reference sequences: 00:00:06
bmax according to bmaxDivN setting: 342195036
Using parameters --bmax 256646277 --dcv 1024
  Doing ahead-of-time memory usage test
  Passed!  Constructing with these parameters: --bmax 256646277 --dcv 1024
Constructing suffix-array element generator
Building DifferenceCoverSample
  Building sPrime
  Building sPrimeOrder
  V-Sorting samples
  V-Sorting samples time: 00:00:29
  Allocating rank array
  Ranking v-sort output
  Ranking v-sort output time: 00:00:10
  Invoking Larsson-Sadakane on ranks
  Invoking Larsson-Sadakane on ranks time: 00:00:15
  Sanity-checking and returning
Building samples
Reserving space for 12 sample suffixes
Generating random suffixes
QSorting 12 sample offsets, eliminating duplicates
QSorting sample offsets, eliminating duplicates time: 00:00:00
Multikey QSorting 12 samples
  (Using difference cover)
  Multikey QSorting samples time: 00:00:00
Calculating bucket sizes
Splitting and merging
  Splitting and merging time: 00:00:00
Split 1, merged 5; iterating...
Splitting and merging
  Splitting and merging time: 00:00:00
Split 1, merged 1; iterating...
Splitting and merging
  Splitting and merging time: 00:00:00
Avg bucket size: 1.71098e+08 (target: 256646276)
Converting suffix-array elements to index image
Allocating ftab, absorbFtab
Entering Ebwt loop
Getting block 1 of 8
  Reserving size (256646277) for bucket 1
  Calculating Z arrays for bucket 1
  Entering block accumulator loop for bucket 1:
  bucket 1: 10%
  bucket 1: 20%
  bucket 1: 30%
  bucket 1: 40%
  bucket 1: 50%
  bucket 1: 60%
  bucket 1: 70%
  bucket 1: 80%
  bucket 1: 90%
  bucket 1: 100%
  Sorting block of length 132611306 for bucket 1
  (Using difference cover)
  Sorting block time: 00:00:44
Returning block of 132611307 for bucket 1
Getting block 2 of 8
  Reserving size (256646277) for bucket 2
  Calculating Z arrays for bucket 2
  Entering block accumulator loop for bucket 2:
  bucket 2: 10%
  bucket 2: 20%
  bucket 2: 30%
  bucket 2: 40%
  bucket 2: 50%
  bucket 2: 60%
  bucket 2: 70%
  bucket 2: 80%
  bucket 2: 90%
  bucket 2: 100%
  Sorting block of length 190962675 for bucket 2
  (Using difference cover)
  Sorting block time: 00:01:05
Returning block of 190962676 for bucket 2
Getting block 3 of 8
  Reserving size (256646277) for bucket 3
  Calculating Z arrays for bucket 3
  Entering block accumulator loop for bucket 3:
  bucket 3: 10%
  bucket 3: 20%
  bucket 3: 30%
  bucket 3: 40%
  bucket 3: 50%
  bucket 3: 60%
  bucket 3: 70%
  bucket 3: 80%
  bucket 3: 90%
  bucket 3: 100%
  Sorting block of length 158824892 for bucket 3
  (Using difference cover)
  Sorting block time: 00:00:53
Returning block of 158824893 for bucket 3
Getting block 4 of 8
  Reserving size (256646277) for bucket 4
  Calculating Z arrays for bucket 4
  Entering block accumulator loop for bucket 4:
  bucket 4: 10%
  bucket 4: 20%
  bucket 4: 30%
  bucket 4: 40%
  bucket 4: 50%
  bucket 4: 60%
  bucket 4: 70%
  bucket 4: 80%
  bucket 4: 90%
  bucket 4: 100%
  Sorting block of length 232901378 for bucket 4
  (Using difference cover)
  Sorting block time: 00:01:22
Returning block of 232901379 for bucket 4
Getting block 5 of 8
  Reserving size (256646277) for bucket 5
  Calculating Z arrays for bucket 5
  Entering block accumulator loop for bucket 5:
  bucket 5: 10%
  bucket 5: 20%
  bucket 5: 30%
  bucket 5: 40%
  bucket 5: 50%
  bucket 5: 60%
  bucket 5: 70%
  bucket 5: 80%
  bucket 5: 90%
  bucket 5: 100%
  Sorting block of length 240934688 for bucket 5
  (Using difference cover)
  Sorting block time: 00:01:25
Returning block of 240934689 for bucket 5
Getting block 6 of 8
  Reserving size (256646277) for bucket 6
  Calculating Z arrays for bucket 6
  Entering block accumulator loop for bucket 6:
  bucket 6: 10%
  bucket 6: 20%
  bucket 6: 30%
  bucket 6: 40%
  bucket 6: 50%
  bucket 6: 60%
  bucket 6: 70%
  bucket 6: 80%
  bucket 6: 90%
  bucket 6: 100%
  Sorting block of length 38421609 for bucket 6
  (Using difference cover)
  Sorting block time: 00:00:12
Returning block of 38421610 for bucket 6
Getting block 7 of 8
  Reserving size (256646277) for bucket 7
  Calculating Z arrays for bucket 7
  Entering block accumulator loop for bucket 7:
  bucket 7: 10%
  bucket 7: 20%
  bucket 7: 30%
  bucket 7: 40%
  bucket 7: 50%
  bucket 7: 60%
  bucket 7: 70%
  bucket 7: 80%
  bucket 7: 90%
  bucket 7: 100%
  Sorting block of length 244193905 for bucket 7
  (Using difference cover)
  Sorting block time: 00:01:24
Returning block of 244193906 for bucket 7
Getting block 8 of 8
  Reserving size (256646277) for bucket 8
  Calculating Z arrays for bucket 8
  Entering block accumulator loop for bucket 8:
  bucket 8: 10%
  bucket 8: 20%
  bucket 8: 30%
  bucket 8: 40%
  bucket 8: 50%
  bucket 8: 60%
  bucket 8: 70%
  bucket 8: 80%
  bucket 8: 90%
  bucket 8: 100%
  Sorting block of length 129929687 for bucket 8
  (Using difference cover)
  Sorting block time: 00:00:42
Returning block of 129929688 for bucket 8
Exited Ebwt loop
fchr[A]: 0
fchr[C]: 433838846
fchr[G]: 684698787
fchr[T]: 935533089
fchr[$]: 1368780147
Exiting Ebwt::buildToDisk()
Returning from initFromVector
Wrote 460780347 bytes to primary EBWT file: /mnt/vast/hpc/csg/hn2435/RNA_Circ/index/danio_rerio_index.1.bt2.tmp
Wrote 342195044 bytes to secondary EBWT file: /mnt/vast/hpc/csg/hn2435/RNA_Circ/index/danio_rerio_index.2.bt2.tmp
Re-opening _in1 and _in2 as input streams
Returning from Ebwt constructor
Headers:
    len: 1368780147
    bwtLen: 1368780148
    sz: 342195037
    bwtSz: 342195037
    lineRate: 6
    offRate: 4
    offMask: 0xfffffff0
    ftabChars: 10
    eftabLen: 20
    eftabSz: 80
    ftabLen: 1048577
    ftabSz: 4194308
    offsLen: 85548760
    offsSz: 342195040
    lineSz: 64
    sideSz: 64
    sideBwtSz: 48
    sideBwtLen: 192
    numSides: 7129064
    numLines: 7129064
    ebwtTotLen: 456260096
    ebwtTotSz: 456260096
    color: 0
    reverse: 0
Total time for call to driver() for forward index: 00:24:25
Reading reference sizes
  Time reading reference sizes: 00:00:06
Calculating joined length
Writing header
Reserving space for joined string
Joining reference sequences
  Time to join reference sequences: 00:00:06
  Time to reverse reference sequence: 00:00:01
bmax according to bmaxDivN setting: 342195036
Using parameters --bmax 256646277 --dcv 1024
  Doing ahead-of-time memory usage test
  Passed!  Constructing with these parameters: --bmax 256646277 --dcv 1024
Constructing suffix-array element generator
Building DifferenceCoverSample
  Building sPrime
  Building sPrimeOrder
  V-Sorting samples
  V-Sorting samples time: 00:00:26
  Allocating rank array
  Ranking v-sort output
  Ranking v-sort output time: 00:00:09
  Invoking Larsson-Sadakane on ranks
  Invoking Larsson-Sadakane on ranks time: 00:00:14
  Sanity-checking and returning
Building samples
Reserving space for 12 sample suffixes
Generating random suffixes
QSorting 12 sample offsets, eliminating duplicates
QSorting sample offsets, eliminating duplicates time: 00:00:00
Multikey QSorting 12 samples
  (Using difference cover)
  Multikey QSorting samples time: 00:00:00
Calculating bucket sizes
Splitting and merging
  Splitting and merging time: 00:00:00
Split 1, merged 6; iterating...
Splitting and merging
  Splitting and merging time: 00:00:00
Split 1, merged 1; iterating...
Splitting and merging
  Splitting and merging time: 00:00:00
Avg bucket size: 1.71098e+08 (target: 256646276)
Converting suffix-array elements to index image
Allocating ftab, absorbFtab
Entering Ebwt loop
Getting block 1 of 8
  Reserving size (256646277) for bucket 1
  Calculating Z arrays for bucket 1
  Entering block accumulator loop for bucket 1:
  bucket 1: 10%
  bucket 1: 20%
  bucket 1: 30%
  bucket 1: 40%
  bucket 1: 50%
  bucket 1: 60%
  bucket 1: 70%
  bucket 1: 80%
  bucket 1: 90%
  bucket 1: 100%
  Sorting block of length 150426840 for bucket 1
  (Using difference cover)
  Sorting block time: 00:00:45
Returning block of 150426841 for bucket 1
Getting block 2 of 8
  Reserving size (256646277) for bucket 2
  Calculating Z arrays for bucket 2
  Entering block accumulator loop for bucket 2:
  bucket 2: 10%
  bucket 2: 20%
  bucket 2: 30%
  bucket 2: 40%
  bucket 2: 50%
  bucket 2: 60%
  bucket 2: 70%
  bucket 2: 80%
  bucket 2: 90%
  bucket 2: 100%
  Sorting block of length 212995493 for bucket 2
  (Using difference cover)
  Sorting block time: 00:01:07
Returning block of 212995494 for bucket 2
Getting block 3 of 8
  Reserving size (256646277) for bucket 3
  Calculating Z arrays for bucket 3
  Entering block accumulator loop for bucket 3:
  bucket 3: 10%
  bucket 3: 20%
  bucket 3: 30%
  bucket 3: 40%
  bucket 3: 50%
  bucket 3: 60%
  bucket 3: 70%
  bucket 3: 80%
  bucket 3: 90%
  bucket 3: 100%
  Sorting block of length 156784704 for bucket 3
  (Using difference cover)
  Sorting block time: 00:00:48
Returning block of 156784705 for bucket 3
Getting block 4 of 8
  Reserving size (256646277) for bucket 4
  Calculating Z arrays for bucket 4
  Entering block accumulator loop for bucket 4:
  bucket 4: 10%
  bucket 4: 20%
  bucket 4: 30%
  bucket 4: 40%
  bucket 4: 50%
  bucket 4: 60%
  bucket 4: 70%
  bucket 4: 80%
  bucket 4: 90%
  bucket 4: 100%
  Sorting block of length 115841973 for bucket 4
  (Using difference cover)
  Sorting block time: 00:00:38
Returning block of 115841974 for bucket 4
Getting block 5 of 8
  Reserving size (256646277) for bucket 5
  Calculating Z arrays for bucket 5
  Entering block accumulator loop for bucket 5:
  bucket 5: 10%
  bucket 5: 20%
  bucket 5: 30%
  bucket 5: 40%
  bucket 5: 50%
  bucket 5: 60%
  bucket 5: 70%
  bucket 5: 80%
  bucket 5: 90%
  bucket 5: 100%
  Sorting block of length 212607260 for bucket 5
  (Using difference cover)
  Sorting block time: 00:01:10
Returning block of 212607261 for bucket 5
Getting block 6 of 8
  Reserving size (256646277) for bucket 6
  Calculating Z arrays for bucket 6
  Entering block accumulator loop for bucket 6:
  bucket 6: 10%
  bucket 6: 20%
  bucket 6: 30%
  bucket 6: 40%
  bucket 6: 50%
  bucket 6: 60%
  bucket 6: 70%
  bucket 6: 80%
  bucket 6: 90%
  bucket 6: 100%
  Sorting block of length 246932472 for bucket 6
  (Using difference cover)
  Sorting block time: 00:01:18
Returning block of 246932473 for bucket 6
Getting block 7 of 8
  Reserving size (256646277) for bucket 7
  Calculating Z arrays for bucket 7
  Entering block accumulator loop for bucket 7:
  bucket 7: 10%
  bucket 7: 20%
  bucket 7: 30%
  bucket 7: 40%
  bucket 7: 50%
  bucket 7: 60%
  bucket 7: 70%
  bucket 7: 80%
  bucket 7: 90%
  bucket 7: 100%
  Sorting block of length 204281230 for bucket 7
  (Using difference cover)
  Sorting block time: 00:01:03
Returning block of 204281231 for bucket 7
Getting block 8 of 8
  Reserving size (256646277) for bucket 8
  Calculating Z arrays for bucket 8
  Entering block accumulator loop for bucket 8:
  bucket 8: 10%
  bucket 8: 20%
  bucket 8: 30%
  bucket 8: 40%
  bucket 8: 50%
  bucket 8: 60%
  bucket 8: 70%
  bucket 8: 80%
  bucket 8: 90%
  bucket 8: 100%
  Sorting block of length 68910168 for bucket 8
  (Using difference cover)
  Sorting block time: 00:00:20
Returning block of 68910169 for bucket 8
Exited Ebwt loop
fchr[A]: 0
fchr[C]: 433838846
fchr[G]: 684698787
fchr[T]: 935533089
fchr[$]: 1368780147
Exiting Ebwt::buildToDisk()
Returning from initFromVector
Wrote 460780347 bytes to primary EBWT file: /mnt/vast/hpc/csg/hn2435/RNA_Circ/index/danio_rerio_index.rev.1.bt2.tmp
Wrote 342195044 bytes to secondary EBWT file: /mnt/vast/hpc/csg/hn2435/RNA_Circ/index/danio_rerio_index.rev.2.bt2.tmp
Re-opening _in1 and _in2 as input streams
Returning from Ebwt constructor
Headers:
    len: 1368780147
    bwtLen: 1368780148
    sz: 342195037
    bwtSz: 342195037
    lineRate: 6
    offRate: 4
    offMask: 0xfffffff0
    ftabChars: 10
    eftabLen: 20
    eftabSz: 80
    ftabLen: 1048577
    ftabSz: 4194308
    offsLen: 85548760
    offsSz: 342195040
    lineSz: 64
    sideSz: 64
    sideBwtSz: 48
    sideBwtLen: 192
    numSides: 7129064
    numLines: 7129064
    ebwtTotLen: 456260096
    ebwtTotSz: 456260096
    color: 0
    reverse: 1
Total time for backward call to driver() for mirror index: 00:15:09
Renaming /mnt/vast/hpc/csg/hn2435/RNA_Circ/index/danio_rerio_index.3.bt2.tmp to /mnt/vast/hpc/csg/hn2435/RNA_Circ/index/danio_rerio_index.3.bt2
Renaming /mnt/vast/hpc/csg/hn2435/RNA_Circ/index/danio_rerio_index.4.bt2.tmp to /mnt/vast/hpc/csg/hn2435/RNA_Circ/index/danio_rerio_index.4.bt2
Renaming /mnt/vast/hpc/csg/hn2435/RNA_Circ/index/danio_rerio_index.1.bt2.tmp to /mnt/vast/hpc/csg/hn2435/RNA_Circ/index/danio_rerio_index.1.bt2
Renaming /mnt/vast/hpc/csg/hn2435/RNA_Circ/index/danio_rerio_index.2.bt2.tmp to /mnt/vast/hpc/csg/hn2435/RNA_Circ/index/danio_rerio_index.2.bt2
Renaming /mnt/vast/hpc/csg/hn2435/RNA_Circ/index/danio_rerio_index.rev.1.bt2.tmp to /mnt/vast/hpc/csg/hn2435/RNA_Circ/index/danio_rerio_index.rev.1.bt2
Renaming /mnt/vast/hpc/csg/hn2435/RNA_Circ/index/danio_rerio_index.rev.2.bt2.tmp to /mnt/vast/hpc/csg/hn2435/RNA_Circ/index/danio_rerio_index.rev.2.bt2
Index output directory: /mnt/vast/hpc/csg/hn2435/RNA_Circ/index/danio_rerio_index
                       
Let's look at the vmem:
hard resource_list:         h_rt=43200,h_vmem=5G
usage         1:            cpu=00:31:48, mem=4102.72084 GB s, io=6.97810 GB, vmem=2.418G, maxvmem=2.450G
                       
                            
Job ended at: 2023-11-27 13:39:54
                            
